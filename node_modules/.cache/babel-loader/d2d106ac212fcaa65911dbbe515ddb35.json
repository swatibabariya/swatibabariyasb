{"remainingRequest":"D:\\poc\\node_modules\\babel-loader\\lib\\index.js!D:\\poc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\poc\\src\\signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\poc\\src\\signup.vue","mtime":1537510605540},{"path":"D:\\poc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536553137313},{"path":"D:\\poc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\poc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePassword from \"vue-password\";\nimport { required, email, sameAs, minLength } from \"vuelidate/lib/validators\";\nexport default {\n  data: function data() {\n    return {\n      email: \"\",\n      password: \"\",\n      repeatPassword: \"\"\n    };\n  },\n  validations: {\n    email: {\n      required: required,\n      email: email\n    },\n    password: {\n      required: required,\n      minLength: minLength(6)\n    },\n    repeatPassword: {\n      required: required,\n      minLength: minLength(6),\n      sameAsPassword: sameAs(\"password\")\n    }\n  },\n  components: {\n    VuePassword: VuePassword\n  },\n  methods: {\n    onsubmit: function onsubmit() {\n      var _this = this;\n\n      if (!this.$v.$invalid && typeof Storage !== \"undefined\") {\n        var user = JSON.parse(localStorage.getItem(\"userarray\"));\n        var flag;\n\n        if (user) {\n          flag = user.find(function (element) {\n            return element.email == _this.email;\n          });\n        } else {\n          flag = false;\n        }\n\n        if (!flag) {\n          if (user == undefined) {\n            var entry = [{\n              email: this.email,\n              password: this.password\n            }];\n            localStorage.setItem(\"userarray\", JSON.stringify(entry));\n          } else {\n            user.push({\n              email: this.email,\n              password: this.password\n            });\n            localStorage.setItem(\"userarray\", JSON.stringify(user));\n          }\n\n          this.$router.push(\"/login\");\n        } else {\n          alert(\"email is alredy taken.\");\n          return;\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,WAAA,MAAA,cAAA;AACA,SAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,QAAA,0BAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AAEA,gBAAA,EAFA;AAGA,sBAAA;AAHA,KAAA;AAKA,GAPA;AASA,eAAA;AACA,WAAA;AACA,wBADA;AAEA;AAFA,KADA;AAMA,cAAA;AACA,wBADA;AAEA,iBAAA,UAAA,CAAA;AAFA,KANA;AAUA,oBAAA;AACA,wBADA;AAEA,iBAAA,UAAA,CAAA,CAFA;AAGA,sBAAA,OAAA,UAAA;AAHA;AAVA,GATA;AAyBA,cAAA;AACA;AADA,GAzBA;AA4BA,WAAA;AACA,YADA,sBACA;AAAA;;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,QAAA,IAAA,OAAA,OAAA,KAAA,WAAA,EAAA;AACA,YAAA,OAAA,KAAA,KAAA,CAAA,aAAA,OAAA,CAAA,WAAA,CAAA,CAAA;AACA,YAAA,IAAA;;AACA,YAAA,IAAA,EAAA;AACA,iBAAA,KAAA,IAAA,CAAA;AAAA,mBAAA,QAAA,KAAA,IAAA,MAAA,KAAA;AAAA,WAAA,CAAA;AACA,SAFA,MAEA;AACA,iBAAA,KAAA;AACA;;AACA,YAAA,CAAA,IAAA,EAAA;AACA,cAAA,QAAA,SAAA,EAAA;AACA,gBAAA,QAAA,CACA;AACA,qBAAA,KAAA,KADA;AAEA,wBAAA,KAAA;AAFA,aADA,CAAA;AAMA,yBAAA,OAAA,CAAA,WAAA,EAAA,KAAA,SAAA,CAAA,KAAA,CAAA;AACA,WARA,MAQA;AACA,iBAAA,IAAA,CAAA;AACA,qBAAA,KAAA,KADA;AAEA,wBAAA,KAAA;AAFA,aAAA;AAIA,yBAAA,OAAA,CAAA,WAAA,EAAA,KAAA,SAAA,CAAA,IAAA,CAAA;AACA;;AACA,eAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,SAjBA,MAiBA;AACA,gBAAA,wBAAA;AACA;AACA;AACA;AACA;AAhCA;AA5BA,CAAA","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n\r\n    <form class=\"form-signin\">\r\n      <h2 class=\"form-signin-heading\">SignUp</h2>\r\n      <div class=input><label for=\"email\">Email</label><input type=\"text\" class=\"form-control\" name=\"username\"\r\n          placeholder=\"Email Address\" required=\"\" autofocus=\"\" :class=\"{ error: $v.email.$error }\" v-model.trim=\"email\"\r\n          id=\"email\" @input=\"$v.email.$touch()\" />\r\n        <div v-if=\"$v.email.$dirty\">\r\n          <p class=\"error-message\" v-if=\"!$v.email.email\">Please enter a valid email address.</p>\r\n          <p class=\"error-message\" v-if=\"!$v.email.required\">Email must not be empty.</p>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <label for=\"password\">Password</label>\r\n      <vue-password required=\"\" v-model.trim=\"password\" class=\"input\" @input=\"$v.password.$touch()\"></vue-password>\r\n      <div v-if=\"$v.password.$dirty\">\r\n        <p class=\"error-message\" v-if=\"!$v.password.required\">Password must not be empty.</p>\r\n        <p class=\"error-message\" v-if=\"!$v.password.minLength\">Password length must be 6</p>\r\n      </div>\r\n\r\n      <div class=\"input\">\r\n        <label for=\"repeatPassword\">Repeat Password</label>\r\n        <input :class=\"{ error: $v.repeatPassword.$error }\" type=\"password\" class=\"form-control\" id=\"repeatPassword\"\r\n          v-model.trim=\"repeatPassword\" @input=\"$v.repeatPassword.$touch()\">\r\n\r\n        <div v-if=\"$v.repeatPassword.$dirty\">\r\n          <p class=\"error-message\" v-if=\"!$v.repeatPassword.sameAsPassword\">Passwords must be identical.</p>\r\n\r\n          <p class=\"error-message\" v-if=\"!$v.repeatPassword.required\">Password must not be empty.</p>\r\n        </div>\r\n      </div>\r\n      <button :disabled=\"$v.$invalid\" type=\"submit\" @click=\"onsubmit\" class=\"btn btn-lg btn-primary btn-block\">signup</button>\r\n\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport VuePassword from \"vue-password\";\r\nimport { required, email, sameAs, minLength } from \"vuelidate/lib/validators\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      repeatPassword: \"\"\r\n    };\r\n  },\r\n\r\n  validations: {\r\n    email: {\r\n      required,\r\n      email\r\n    },\r\n\r\n    password: {\r\n      required,\r\n      minLength: minLength(6)\r\n    },\r\n    repeatPassword: {\r\n      required,\r\n      minLength: minLength(6),\r\n      sameAsPassword: sameAs(\"password\")\r\n    }\r\n  },\r\n  components: {\r\n    VuePassword\r\n  },\r\n  methods: {\r\n    onsubmit() {\r\n      if (!this.$v.$invalid && typeof Storage !== \"undefined\") {\r\n        let user = JSON.parse(localStorage.getItem(\"userarray\"));\r\n        let flag;\r\n        if (user) {\r\n          flag = user.find(element => element.email == this.email);\r\n        } else {\r\n          flag = false;\r\n        }\r\n        if (!flag) {\r\n          if (user == undefined) {\r\n            let entry = [\r\n              {\r\n                email: this.email,\r\n                password: this.password\r\n              }\r\n            ];\r\n            localStorage.setItem(\"userarray\", JSON.stringify(entry));\r\n          } else {\r\n            user.push({\r\n              email: this.email,\r\n              password: this.password\r\n            });\r\n            localStorage.setItem(\"userarray\", JSON.stringify(user));\r\n          }\r\n          this.$router.push(\"/login\");\r\n        } else {\r\n          alert(\"email is alredy taken.\");\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.form {\r\n  display: inline-block;\r\n  text-align: center;\r\n  width: 49%;\r\n}\r\n\r\n.validators {\r\n  display: inline-block;\r\n  width: 49%;\r\n  text-align: center;\r\n  vertical-align: top;\r\n}\r\n\r\n.input {\r\n  padding: 1px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n.error {\r\n  border: 1px solid red;\r\n}\r\n\r\n.wrapper {\r\n  margin-top: 80px;\r\n}\r\n\r\n.form-signin {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\n</style>"],"sourceRoot":"src"}]}