{"remainingRequest":"D:\\poc\\node_modules\\babel-loader\\lib\\index.js!D:\\poc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\poc\\src\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\poc\\src\\login.vue","mtime":1537510562421},{"path":"D:\\poc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536553137313},{"path":"D:\\poc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\poc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePassword from \"vue-password\";\nimport { required, email, minLength } from \"vuelidate/lib/validators\";\nexport default {\n  data: function data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  components: {\n    VuePassword: VuePassword\n  },\n  validations: {\n    email: {\n      required: required,\n      email: email\n    },\n    password: {\n      required: required,\n      minLength: minLength(6)\n    }\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      this.$store.dispatch(\"login\", {\n        email: this.email,\n        password: this.password\n      }).then(function () {\n        if (_this.$route.query.to) {\n          _this.$router.push(_this.$route.query.to);\n        } else {\n          _this.$router.push(\"/\"); // this.$store.getters.cartProducts.length = JSON.parse(\n          //   localStorage.getItem(\"cart\")\n          // );\n\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,WAAA,MAAA,cAAA;AACA,SAAA,QAAA,EAAA,KAAA,EAAA,SAAA,QAAA,0BAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AAEA,gBAAA;AAFA,KAAA;AAIA,GANA;AAOA,cAAA;AACA;AADA,GAPA;AAWA,eAAA;AACA,WAAA;AACA,wBADA;AAEA;AAFA,KADA;AAMA,cAAA;AACA,wBADA;AAEA,iBAAA,UAAA,CAAA;AAFA;AANA,GAXA;AAsBA,WAAA;AACA,SADA,mBACA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,OADA,EACA;AACA,eAAA,KAAA,KADA;AAEA,kBAAA,KAAA;AAFA,OADA,EAKA,IALA,CAKA,YAAA;AACA,YAAA,MAAA,MAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,MAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AACA,SAFA,MAEA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,GAAA,EADA,CAEA;AACA;AACA;;AACA;AACA,OAdA;AAeA;AAjBA;AAtBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n\r\n    <form class=\"form-login\">\r\n\r\n      <h2 class=\"form-signin-heading\">Please login</h2>\r\n      <div class=\"input\"><label for=\"email\">Email</label><input type=\"text\" class=\"form-control\" name=\"username\"\r\n          placeholder=\"Email Address\" required=\"\" autofocus=\"\" :class=\"{ error: $v.email.$error }\" v-model.trim=\"email\"\r\n          id=\"email\" width=\"50px\" @input=\"$v.email.$touch()\" />\r\n        <div v-if=\"$v.email.$dirty\">\r\n          <p class=\"error-message\" v-if=\"!$v.email.email\">Please enter a valid email address.</p>\r\n          <p class=\"error-message\" v-if=\"!$v.email.required\">Email must not be empty.</p>\r\n        </div>\r\n\r\n      </div>\r\n      <label for=\"password\">Password</label>\r\n      <vue-password required=\"\" v-model.trim=\"password\" class=\"input\" @input=\"$v.password.$touch()\"></vue-password>\r\n      <div v-if=\"$v.password.$dirty\">\r\n        <p class=\"error-message\" v-if=\"!$v.password.required\">Password must not be empty.</p>\r\n        <p class=\"error-message\" v-if=\"!$v.password.minLength\">Password length must be 6</p>\r\n      </div>\r\n\r\n      <button :disabled=\"$v.$invalid\" type=\"submit\" @click=\"login\" class=\"btn btn-lg btn-primary btn-block\">LogIn</button><br />\r\n      <router-link to='/reset'>Forget Password</router-link>\r\n\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport VuePassword from \"vue-password\";\r\nimport { required, email, minLength } from \"vuelidate/lib/validators\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    VuePassword\r\n  },\r\n\r\n  validations: {\r\n    email: {\r\n      required,\r\n      email\r\n    },\r\n\r\n    password: {\r\n      required,\r\n      minLength: minLength(6)\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$store\r\n        .dispatch(\"login\", {\r\n          email: this.email,\r\n          password: this.password\r\n        })\r\n        .then(() => {\r\n          if (this.$route.query.to) {\r\n            this.$router.push(this.$route.query.to);\r\n          } else {\r\n            this.$router.push(\"/\");\r\n            // this.$store.getters.cartProducts.length = JSON.parse(\r\n            //   localStorage.getItem(\"cart\")\r\n            // );\r\n          }\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.form {\r\n  display: inline-block;\r\n  text-align: center;\r\n  width: 49%;\r\n}\r\n\r\n.validators {\r\n  display: inline-block;\r\n  width: 49%;\r\n  text-align: center;\r\n  vertical-align: top;\r\n}\r\n\r\n.input {\r\n  padding: 5px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n.error {\r\n  border: 1px solid red;\r\n}\r\n\r\n.wrapper {\r\n  margin-top: 80px;\r\n}\r\n\r\n.form-login {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\n</style>"],"sourceRoot":"src"}]}