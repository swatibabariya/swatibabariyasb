{"remainingRequest":"D:\\poc\\node_modules\\thread-loader\\dist\\cjs.js!D:\\poc\\node_modules\\babel-loader\\lib\\index.js!D:\\poc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\poc\\src\\reset.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\poc\\src\\reset.vue","mtime":1537510587633},{"path":"D:\\poc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536553137313},{"path":"D:\\poc\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\poc\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\poc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, email } from \"vuelidate/lib/validators\";\nexport default {\n  data: function data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  validations: {\n    email: {\n      required: required,\n      email: email\n    }\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      var registeruser = JSON.parse(localStorage.getItem(\"userarray\"));\n\n      if (registeruser) {\n        var flag = false;\n        registeruser.some(function (element) {\n          if (element.email == _this.email) {\n            flag = true;\n          }\n        });\n\n        if (!flag) {\n          alert(\"User doesnot exist\");\n        } else {\n          this.$router.push(\"/login\");\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["reset.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,SAAA,QAAA,EAAA,KAAA,QAAA,0BAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AAEA,gBAAA;AAFA,KAAA;AAIA,GANA;AAOA,eAAA;AACA,WAAA;AACA,wBADA;AAEA;AAFA;AADA,GAPA;AAaA,WAAA;AACA,UADA,oBACA;AAAA;;AACA,UAAA,eAAA,KAAA,KAAA,CAAA,aAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,UAAA,YAAA,EAAA;AACA,YAAA,OAAA,KAAA;AACA,qBAAA,IAAA,CAAA,mBAAA;AACA,cAAA,QAAA,KAAA,IAAA,MAAA,KAAA,EAAA;AACA,mBAAA,IAAA;AACA;AACA,SAJA;;AAKA,YAAA,CAAA,IAAA,EAAA;AACA,gBAAA,oBAAA;AACA,SAFA,MAEA;AACA,eAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AACA;AACA;AAhBA;AAbA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"form-group\">\r\n      <div class=input><label for=\"email\">Email:</label><input type=\"text\" class=\"form-control\" name=\"username\"\r\n          placeholder=\"Email Address\" required=\"\" autofocus=\"\" :class=\"{ error: $v.email.$error }\" v-model.trim=\"email\"\r\n          id=\"email\" @input=\"$v.email.$touch()\" />\r\n        <div v-if=\"$v.email.$dirty\">\r\n          <p class=\"error-message\" v-if=\"!$v.email.required\">Email must not be empty.</p>\r\n        </div>\r\n        <br />\r\n\r\n        <button @click='submit' class=\"btn btn-info btn-sm\" :disabled=\"$v.$invalid\" type=\"submit\">sendlink</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { required, email } from \"vuelidate/lib/validators\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  },\r\n  validations: {\r\n    email: {\r\n      required,\r\n      email\r\n    }\r\n  },\r\n  methods: {\r\n    submit() {\r\n      let registeruser = JSON.parse(localStorage.getItem(\"userarray\"));\r\n      if (registeruser) {\r\n        let flag = false;\r\n        registeruser.some(element => {\r\n          if (element.email == this.email) {\r\n            flag = true;\r\n          }\r\n        });\r\n        if (!flag) {\r\n          alert(\"User doesnot exist\");\r\n        } else {\r\n          this.$router.push(\"/login\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.input {\r\n  padding: 5px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n.error {\r\n  border: 1px solid red;\r\n}\r\n\r\n.form-group {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\n\r\n.container {\r\n  margin-top: 80px;\r\n}\r\n</style>"],"sourceRoot":"src"}]}